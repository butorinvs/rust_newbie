/*
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç—Ä–∏ (u16) —á–∏—Å–ª–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π –≤ –¥–æ–º–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ –∏ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã.
–ó–∞—Ç–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –≤ –∫–∞–∫–æ–º –ø–æ–¥—ä–µ–∑–¥–µ –∏ –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–∂–µ —ç—Ç–æ–≥–æ –¥–æ–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º.
–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≤ –¥–æ–º–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ –ø—Ä–æ–ø—É—Å–∫–∏ —ç—Ç–∞–∂–µ–π –∏–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä, –∞ —Ç–∞–∫–∂–µ —á—Ç–æ –Ω—É–º–µ—Ä–∞—Ü–∏—è –∫–≤–∞—Ä—Ç–∏—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1.
–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –≤ –¥–æ–º–µ.
–ü–æ–¥—Å–∫–∞–∑–∫–∞ üí°

Sample Input:
5
4
21

Sample Output:
–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –Ω–æ–º–µ—Ä–æ–º 21 –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–¥—ä–µ–∑–¥–µ 2 –Ω–∞ 1 —ç—Ç–∞–∂–µ
*/
fn main() {
    let v = std::io::stdin()
        .lines()
        .take(3)
        .map(|x| x.unwrap().trim().parse::<u16>().unwrap())
        .collect::<Vec<_>>();
    let flour = v[0];
    let numb = v[1];
    let flat = v[2];
    let pod = (v[2] - 1) / (v[0] * v[1]) + 1;
    let etag = ((v[2] - 1) / v[1]) % v[0] + 1;
    print!(
        "–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –Ω–æ–º–µ—Ä–æ–º {} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–¥—ä–µ–∑–¥–µ {} –Ω–∞ {} —ç—Ç–∞–∂–µ",
        flat, pod, etag
    );
}
